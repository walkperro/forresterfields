"use client";

import { useEffect, useState, useCallback } from "react";
import { AnimatePresence, motion } from "framer-motion";
import Image from "next/image";

export type GalleryImage = { src: string; alt: string };

type Props = {
  images: GalleryImage[];
  startIndex: number;
};

export default function Lightbox({ images, startIndex }: Props) {
  const [open, setOpen] = useState(false);
  const [idx, setIdx] = useState(startIndex);

  const close = useCallback(() => setOpen(false), []);
  const next = useCallback(() => setIdx((i) => (i + 1) % images.length), [images.length]);
  const prev = useCallback(() => setIdx((i) => (i - 1 + images.length) % images.length), [images.length]);

  // keyboard nav
  useEffect(() => {
    if (!open) return;
    const onKey = (e: KeyboardEvent) => {
      if (e.key === "Escape") close();
      else if (e.key === "ArrowRight") next();
      else if (e.key === "ArrowLeft") prev();
    };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [open, close, next, prev]);

  return (
    <>
      {/* Click overlay to open */}
      <button
        aria-label="Open image"
        className="absolute inset-0 focus:outline-none"
        onClick={() => {
          setIdx(startIndex);
          setOpen(true);
        }}
      />

      <AnimatePresence>
        {open && (
          <motion.div
            className="fixed inset-0 z-50 bg-black/80"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={close}
          >
            <motion.div
              className="absolute inset-0 m-auto flex max-h-[92vh] max-w-[92vw] items-center justify-center"
              initial={{ scale: 0.98, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.98, opacity: 0 }}
              transition={{ type: "spring", stiffness: 200, damping: 24 }}
              onClick={(e) => e.stopPropagation()}
            >
              <div className="relative h-[75vh] w-[90vw] md:h-[80vh] md:w-[80vw]">
                <Image
                  src={images[idx].src}
                  alt={images[idx].alt}
                  fill
                  sizes="100vw"
                  className="object-contain rounded-xl"
                  priority
                />
              </div>

              {/* Controls */}
              <button
                onClick={prev}
                aria-label="Previous"
                className="absolute left-3 top-1/2 -translate-y-1/2 rounded-full bg-white/90 px-3 py-2 text-sm font-semibold shadow"
              >
                ‹
              </button>
              <button
                onClick={next}
                aria-label="Next"
                className="absolute right-3 top-1/2 -translate-y-1/2 rounded-full bg-white/90 px-3 py-2 text-sm font-semibold shadow"
              >
                ›
              </button>
              <button
                onClick={close}
                aria-label="Close"
                className="absolute right-3 top-3 rounded-full bg-white/90 px-3 py-1 text-sm font-semibold shadow"
              >
                ✕
              </button>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}
